Blockly.Msg["BVE_CAT_EVENT"]="BVE Events";
Blockly.Msg["BVE_CAT_COMMON"]="BVE Common";
Blockly.Msg["BVE_CAT_SPECIALIZE"]="BVE Argument";
Blockly.Msg["BVE_CAT_UTILITY"]="Utility Func";
Blockly.Msg["BVE_CAT_MISC"]="Misc";

Blockly.Msg["BVE_ELAPSE"]="when elapse (each frame)";
Blockly.Msg["BVE_INITIALIZE"]="when init (load/jump station)";
Blockly.Msg["BVE_KEYDOWN_ANY"]="when any key down";
Blockly.Msg["BVE_KEYUP_ANY"]="when any key up";
Blockly.Msg["BVE_HORN_BLOW"]="when any horn blew";
Blockly.Msg["BVE_DOOR_CHANGE"]="when all door changed";
Blockly.Msg["BVE_SET_SIGNAL"]="when signal update";
Blockly.Msg["BVE_SET_BEACON"]="when beacon update";
Blockly.Msg["BVE_LOAD"]="when plugin loads";
Blockly.Msg["BVE_DISPOSE"]="when plugin unloads";

Blockly.Msg["BVE_ATS_KEY_S"]="S (Space)";
Blockly.Msg["BVE_ATS_KEY_A1"]="A1 (Insert)";
Blockly.Msg["BVE_ATS_KEY_A2"]="A2 (Delete)";
Blockly.Msg["BVE_ATS_KEY_B1"]="B1 (Home)";
Blockly.Msg["BVE_ATS_KEY_B2"]="B2 (End)";
Blockly.Msg["BVE_ATS_KEY_C1"]="C1 (PageUp)";
Blockly.Msg["BVE_ATS_KEY_C2"]="C2 (PageDown)";
Blockly.Msg["BVE_ATS_KEY_D"]="D (2)";
Blockly.Msg["BVE_ATS_KEY_E"]="E (3)";
Blockly.Msg["BVE_ATS_KEY_F"]="F (4)";
Blockly.Msg["BVE_ATS_KEY_G"]="G (5)";
Blockly.Msg["BVE_ATS_KEY_H"]="H (6)";
Blockly.Msg["BVE_ATS_KEY_I"]="I (7)";
Blockly.Msg["BVE_ATS_KEY_J"]="J (8)";
Blockly.Msg["BVE_ATS_KEY_K"]="K (9)";
Blockly.Msg["BVE_ATS_KEY_L"]="L (0)";

Blockly.Msg["BVE_HORN_PRIMARY"]="primary";
Blockly.Msg["BVE_HORN_SECONDARY"]="secondary";
Blockly.Msg["BVE_HORN_MUSIC"]="music (start/stop)";

Blockly.Msg["BVE_VEHICLE_SPEC"]="vehicle %1";
Blockly.Msg["BVE_VSPEC_BRAKE"]="brake notches";
Blockly.Msg["BVE_VSPEC_POWER"]="power notches";
Blockly.Msg["BVE_VSPEC_ATS"]="ats cancel notch";
Blockly.Msg["BVE_VSPEC_B67"]="80% brake notch";
Blockly.Msg["BVE_VSPEC_CAR"]="consist length";

Blockly.Msg["BVE_LOCATION"]="location/m";
Blockly.Msg["BVE_SPEED"]="speed/kmph"
Blockly.Msg["BVE_TIME"]="time/00:00+ms";

Blockly.Msg["BVE_VEHICLE_STATE"]="current %1";
Blockly.Msg["BVE_VSTATE_BC"]="brake cylinder press/pa";
Blockly.Msg["BVE_VSTATE_MR"]="main reservoir press/pa";
Blockly.Msg["BVE_VSTATE_ER"]="equalizing reservoir press/pa";
Blockly.Msg["BVE_VSTATE_BP"]="brake pipe press/pa";
Blockly.Msg["BVE_VSTATE_SAP"]="straight air pipe press/pa";
Blockly.Msg["BVE_VSTATE_AMP"]="traction current/A";

Blockly.Msg["BVE_GET_HANDLE"]="%1 lever pos";
Blockly.Msg["BVE_SET_HANDLE"]="move %1 lever to %2";
Blockly.Msg["BVE_HND_BRAKE"]="brake";
Blockly.Msg["BVE_HND_POWER"]="power";
Blockly.Msg["BVE_HND_REVERSER"]="reverser";
Blockly.Msg["BVE_HND_CONSTSPD"]="constspeed";

Blockly.Msg["BVE_SOUND_STOP"]="stop sound #%1";
Blockly.Msg["BVE_SOUND_PLAY_ONCE"]="play sound #%1 once";
Blockly.Msg["BVE_SOUND_PLAY_LOOP"]="play sound #%1 loop at %2%% volume";
Blockly.Msg["BVE_GET_SOUND_INTERNAL"]="sound #%1 state";
Blockly.Msg["BVE_SET_SOUND_INTERNAL"]="set sound #%1 state to %2";

Blockly.Msg["BVE_GET_PANEL"]="panel state #%1";
Blockly.Msg["BVE_SET_PANEL"]="set panel state #%1 to %2";

Blockly.Msg["BVE_GET_KEY"]="key %1 pressed?";
Blockly.Msg["BVE_GET_DOOR"]="any door opening?";

Blockly.Msg["BVE_INIT_MODE"]="ats mode at init";
Blockly.Msg["BVE_UPDOWN_KEY_CHECK"]="the key associated is %1?";
Blockly.Msg["BVE_HORN_BLEW_CHECK"]="the horn blew is %1?";
Blockly.Msg["BVE_GET_BEACON"]="beacon %1";
Blockly.Msg["BVE_BCN_TYPE"]="type";
Blockly.Msg["BVE_BCN_SIGNAL"]="signal";
Blockly.Msg["BVE_BCN_DISTANCE"]="distance/m";
Blockly.Msg["BVE_BCN_OPTIONAL"]="optional data";

Blockly.Msg["OBVE_PRECEDING_VEHICLE"]="pretrain %1";
Blockly.Msg["OBVE_PRETRAIN_EXIST"]="exists? (0/1)";
Blockly.Msg["OBVE_PRETRAIN_LOCATION"]="location/m";
Blockly.Msg["OBVE_PRETRAIN_DISTANCE"]="distance/m";
Blockly.Msg["OBVE_PRETRAIN_SPEED"]="speed/kmph";
Blockly.Msg["OBVE_NEXT_STATION"]="next %1 %2";
Blockly.Msg["OBVE_NEXTSTA_ANY"]="station";
Blockly.Msg["OBVE_NEXTSTA_STOP"]="stopping station";
Blockly.Msg["OBVE_NEXTSTA_EXIST"]="exists? (0/1)";
Blockly.Msg["OBVE_NEXTSTA_TYPE"]="type";
Blockly.Msg["OBVE_NEXTSTA_STARTPOS"]="start location/m";
Blockly.Msg["OBVE_NEXTSTA_STOPPOS"]="stop location/m";
Blockly.Msg["OBVE_NEXTSTA_ARRTIME"]="arrival time/00:00+s";
Blockly.Msg["OBVE_NEXTSTA_DEPTIME"]="departure time/00:00+s";
Blockly.Msg["OBVE_NEXTSTA_STOPTIME"]="stop time/s";
Blockly.Msg["OBVE_NEXTSTA_OPENLEFT"]="open left door? (0/1)";
Blockly.Msg["OBVE_NEXTSTA_OPENRIGHT"]="open right door? (0/1)";
Blockly.Msg["OBVE_NEXTSTA_FORCESTOP"]="force red signal? (0/1)";
Blockly.Msg["OBVE_VSTATE_RADIUS"]="curve radius";
布洛克莉。味精["OBVE_VSTATE_CANT"]="曲线超高";
布洛克莉。味精["OBVE_VSTATE_PITCH"]="间距";
布洛克莉。味精["OBVE_VSTATE_ADHESION"]="附着力";
布洛克莉。味精["OBVE_VSTATE_RAININTENSITY"]="雨强";
布洛克莉。味精["OBVE_STATE_CAMERAVIEWMODE"]="摄像头查看模式";
布洛克莉。味精["OBVE_STATE_Destination"]="目标代码";
布洛克莉。味精["OBVE_LANGCODE"]="语言代码名称";
布洛克莉。味精["OBVE_GET_DOOR"]="%1个门打开了吗？";
布洛克莉。味精["OBVE_DOOR_LEFT"]="左";
布洛克莉。味精["OBVE_DOOR_RIGHT"]="右";
布洛克莉。味精["OBVE_DOOR_BOTH"]="两个";
布洛克莉。味精["OBVE_DOOR_ANY"]="任何";
布洛克莉。味精["OBVE_SET_DOOR_interlock"]="%2%1门联锁";
布洛克莉。味精["OBVE_DOORIXL_LOCK"]="锁定";
布洛克莉。味精["OBVE_DOORIXL_UNLOCK"]="解锁";
布洛克莉。味精["OBVE_SOUND_PLAY"]="播放声音#%1音量%%：%2音高%%：%3循环？：%4";
布洛克莉。味精["OBVE_CAR_SOUND_PLAY"]="%1声音#%2音量%%：%3音高%%：%4循环？：%5车号：%6";
布洛克莉。味精["OBVE_SOUND_BASIC"]="基本";
布洛克莉。味精["OBVE_SOUND_CAR_INDEX"]="汽车";
布洛克莉。味精["OBVE_SOUND_CAR_LIST"]="多个";
布洛克莉。味精["OBVE_SET_DEBUG_MESSAGE"]="将调试消息设置为%1";
布洛克莉。味精["OBVE_SHOW_MESSAGE"]="显示邮件%1颜色：%2持续时间/秒：%3";
布洛克莉。味精["OBVE_COLOR_BLACK"]="黑色";
布洛克莉。味精["OBVE_COLOR_GRAY"]="灰色";
布洛克莉。味精["OBVE_COLOR_WHITE"]="白色";
布洛克莉。味精["OBVE_COLOR_RED"]="红色";
布洛克莉。味精["OBVE_COLOR_ORANGE"]="橙色";
布洛克莉。味精["OBVE_COLOR_GREEN"]="绿色";
布洛克莉。味精["OBVE_COLOR_BLUE"]="蓝色";
布洛克莉。味精["OBVE_COLOR_MAGENTA"]="洋红色";
布洛克莉。味精["OBVE_DOOR_CHANGE_ANY"]="当任何侧门改变时";
布洛克莉。味精["OBVE_PERFORM_AI"]="请求执行ai操作时";
布洛克莉。味精["OBVE_MSG_AI_WARN"]="添加此块可以删除进入游戏时的警告.";

布洛克莉。味精["OBVE_MSG_PERFORM_AI_ONLY"]="仅在“执行ai”时使用：";
布洛克莉。味精["OBVE_AI_SET_HANDLE"]="移动%1杠杆%2";
布洛克莉。味精["OBVE_AI_updown_KEY"]="be%1密钥为%2";
布洛克莉。味精["OBVE_AI_updown_KEY_DOWN"]="已按下";
布洛克莉。味精["OBVE_AI_updown_KEY_UP"]="已提升";
布洛克莉。味精["OBVE_AI_RESPONSE"]="ai操作的持续时间需要%1";
布洛克莉。味精["OBVE_AI_RESPONSE_TIME"]="%1次";
布洛克莉。味精["OBVE_AI_RESPONSE_TIME_NONE"]="即时";
布洛克莉。味精["OBVE_AI_RESPONSE_TIME_SHORT"]="很短";
布洛克莉。味精["OBVE_AI_RESPONSE_TIME_MEDIUM"]="中度";
布洛克莉。味精["OBVE_AI_RESPONSE_TIME_LONG"]="长";

布洛克莉。味精["BVE_TIMER_SET"]="启动计时器%1%4间隔(ms)%2重复吗？%3"
布洛克莉。味精["BVE_TIMER_MODIFY"]="%2计时器%1";
布洛克莉。味精["BVE_TIMER_TRIGGER"]="计时器%1触发时";
布洛克莉。味精["BVE_TMRMOD_STOP"]="停止";
布洛克莉。味精["BVE_TMRMOD_TRIGSTOP"]="触发和停止";
布洛克莉。味精["BVE_TMRMOD_RESET"]="重新启动";
布洛克莉。味精["BVE_TMRMOD_TRIGRESET"]="触发并重新启动";

布洛克莉。味精["BVE_CONVERT_TO_DOUBLE"]="%1到号码";
布洛克莉。味精["BVE_CONVERT_TO_STRING"]="%1到字符串";
布洛克莉。味精["BVE_CONVERT_TO_BOOLEAN"]="%1到布尔值";
布洛克莉。味精["BVE_CAN_CONVERT_TO"]="%1可以转换为%2吗？";
布洛克莉。味精["BVE_TYPE_DOUBLE"]="数字";
布洛克莉。味精["BVE_TYPE_Boolean"]="布尔值";

布洛克莉。味精["BVE_MSG_HAT_SINGLETON"]="每个事件只能使用一次";
布洛克莉。味精["BVE_MSG_HAT_TIMER_SINGLETON"]="每个定时器名称只能使用一个“当触发时”。";
布洛克莉。味精["BVE_MSG_NO_LIMIT"]="没有限制：";
布洛克莉。味精["BVE_MSG_NULL_LOAD"]="当“加载”时不使用：";
布洛克莉。味精["BVE_MSG_NULL_LOAD_INIT"]="当“加载”或“初始化”时不使用：";
布洛克莉。味精["BVE_MSG_elapse_ONLY"]="仅在“elapse”时使用：";
布洛克莉。味精["BVE_MSG_INIT_ONLY"]="仅在'init'时使用：";
布洛克莉。味精["BVE_MSG_KEY_ANY_ONLY"]="仅在“键向上/向下”时使用：";
布洛克莉。味精["BVE_MSG_BLOW_HORN_ONLY"]="仅在“喇叭吹响”时使用：";
布洛克莉。味精["BVE_MSG_SET_SINAL_ONLY"]="仅在“信号更新”时使用：";
布洛克莉。味精["BVE_MSG_SET_BEACON_ONLY"]="仅在“信标更新”时使用：";
布洛克莉。味精["BVE_MSG_ADVANCED"]="对于高级用户：";

布洛克莉。味精["BVE_CONFIG_LOAD"]="从文件%1读取配置";
布洛克莉。味精["BVE_GET_CONFIG"]="配置[%1]%2";
布洛克莉。味精["BVE_GET_CONFIG_DEFAULT"]="配置[%1]%2缺省%3";
布洛克莉。味精["BVE_SET_CONFIG"]="将配置[%1]%2设置为%3";
布洛克莉。味精["BVE_CONFIG_SAVE"]="将配置保存到文件%1";
布洛克莉。味精["BVE_PLACEHOLDER_PATH"]="文件名.ini";
布洛克莉。味精["BVE_PLACEHOLDER_PART"]="部件名称";
布洛克莉。味精["BVE_PLACEHOLDER_KEY"]="密钥名称";
布洛克莉。味精["BVE_PLACEHOLDER_TIMER"]="计时器名称";
布洛克莉。味精["BVE_PLACEHOLDER_COMMENT"]="注释块。无效。\n在要描述的位置插入。";

布洛克莉。味精["BVE_MSGBOX"]="MsgBox%1";
布洛克莉。味精["BVE_EXCEPTION"]="显示错误%1";

布洛克莉。味精["BVE_VARIABLES_SET"]="设置";
布洛克莉。味精["BVE_VARIABLES_ADDSET"]="添加集合";
布洛克莉。味精["BVE_VARIABLES_SUBTRACTSET"]="减集";
布洛克莉。味精["BVE_VARIABLES_MULTIPAYSET"]="多薪组";
布洛克莉。味精["BVE_VARIABLES_DIVIDESET"]="除集";
布洛克莉。味精["BVE_VARIABLES_MODULOSET"]="模集";
布洛克莉。味精["BVE_VARIABLES_NO_CALCSELF"]="到";
布洛克莉。味精["BVE_VARIABLES_ADDSELF_REAR"]="添加自己之前";
布洛克莉。味精["BVE_VARIABLES_ADDSELF_FRONT"]="添加自己之后";
布洛克莉。味精["BVE_VARIABLES_SUBTRACTSELF_REAR"]="在减去自身之前";
布洛克莉。味精["BVE_VARIABLES_SUBTRACTSELF_FRONT"]="减去自身后";
布洛克莉。味精["BVE_VARIABLES_ADDSELF"]="添加自己";
布洛克莉。味精["BVE_VARIABLES_SUBTRACTSELF"]="减去自身";

Blockly.["CAT_LOGIC"]="Logics";
Blockly.Msg["CAT_LOOP"]="Loops";
Blockly.Msg["CAT_MATH"]="Math";
Blockly.Msg["CAT_TEXT"]="Text";
Blockly.Msg["CAT_LIST"]="Lists";
Blockly.Msg["CAT_VARIABLE"]="Variables";
Blockly.Msg["CAT_FUNCTION"]="Functions";
