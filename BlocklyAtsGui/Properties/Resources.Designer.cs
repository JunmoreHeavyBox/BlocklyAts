//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlocklyAts.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlocklyAts.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 BlocklyAts is an open-source software under the MIT license.
        ///Source code is available at https://github.com/zbx1425/BlocklyAts .
        ///Thanks Mr.Ginga81 ( http://midnightexpginga81.web.fc2.com ) for helping with Japanese translation.
        ///
        ///- Built on Blockly  
        ///Blockly is a library from Google for building beginner-friendly block-based programming languages.  
        ///Licensed under the Apache License, Version 2.0.
        ///https://developers.google.com/blockly
        ///
        ///- C# code generator: blockly-generator-csharp  
        ///Generate C# code [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Attribution {
            get {
                return ResourceManager.GetString("Attribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Name = English
        ///BlocklyName = en
        ///
        ///FormMain.tsbtnNew = New Project (Ctrl+N)
        ///FormMain.tsbtnOpen = Open Project (Ctrl+O)
        ///FormMain.tsbtnSave = Save Project (Ctrl+S)
        ///FormMain.tsbtnSaveAs = Save Project As (Ctrl+Shift+S)
        ///FormMain.tsbtnCompile = Compile (Ctrl+Shift+B)
        ///FormMain.tsbtnCompileRun = Compile and Run (F5)
        ///FormMain.tsbtnCompileSetting = Compiler Configuration
        ///FormMain.tsbtnDebugWindow = Debug Window
        ///FormMain.tsbtnAbout = About BlocklyAts
        ///
        ///FormCompilerConfig.cbShouldx86 = 32-bit Windows DLL\nFo [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string lang_en {
            get {
                return ResourceManager.GetString("lang_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Name = 日本語
        ///BlocklyName = ja
        ///
        ///FormMain.tsbtnNew = 新規プロジェクト (Ctrl+N)
        ///FormMain.tsbtnOpen = プロジェクトを開く (Ctrl+O)
        ///FormMain.tsbtnSave = プロジェクトを保存 (Ctrl+S)
        ///FormMain.tsbtnSaveAs = 名前を付けて保存 (Ctrl+Shift+S)
        ///FormMain.tsbtnCompile = コンパイル (Ctrl+Shift+B)
        ///FormMain.tsbtnCompileRun = コンパイルして実行する (F5)
        ///FormMain.tsbtnCompileSetting = コンパイラ設定
        ///FormMain.tsbtnDebugWindow = デバッグウィンドウ
        ///FormMain.tsbtnAbout = BlocklyAts 関連情報
        ///
        ///FormCompilerConfig.cbShouldx86 = 32ビット Windows DLL\nBVE4/5、OpenBVE用
        ///FormCompilerConfig.cbShouldx64  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string lang_ja {
            get {
                return ResourceManager.GetString("lang_ja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Name = 简体中文
        ///BlocklyName = zh-hans
        ///
        ///FormMain.tsbtnNew = 新建工程 (Ctrl+N)
        ///FormMain.tsbtnOpen = 打开工程 (Ctrl+O)
        ///FormMain.tsbtnSave = 保存工程 (Ctrl+S)
        ///FormMain.tsbtnSaveAs = 工程另存为 (Ctrl+Shift+S)
        ///FormMain.tsbtnCompile = 编译 (Ctrl+Shift+B)
        ///FormMain.tsbtnCompileRun = 编译并运行 (F5)
        ///FormMain.tsbtnCompileSetting = 编译设置
        ///FormMain.tsbtnDebugWindow = 调试窗口
        ///FormMain.tsbtnAbout = 关于 BlocklyAts
        ///
        ///FormCompilerConfig.cbShouldx86 = 32位 Windows DLL\n用于 BVE4/5、OpenBVE
        ///FormCompilerConfig.cbShouldx64 = 64位 Windows DLL\n用于 BVE6
        ///Fo [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string lang_zh_CHS {
            get {
                return ResourceManager.GetString("lang_zh_CHS", resourceCulture);
            }
        }
    }
}
